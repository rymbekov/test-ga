name: Tag push
on:
  push:
     tags:
       - "[0-9]+.[0-9]+.[0-9]+"

env:
  GIT_TAG: ${{ github.ref_name }}

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
       NEW_TAG_WITHOUT_PATCH: ${{ steps.get-versions.outputs.NEW_TAG_WITHOUT_PATCH }}
       GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH: ${{ steps.get-versions.outputs.GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run your first job
      run: |
        echo "This is the first job. Tag was pushed!"
    - name: get versions
      id: get-versions
      run: |
          NEW_TAG_WITHOUT_PATCH=$(echo $GIT_TAG | sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+)/\1.\2/')
          GITHUB_PREVIOUS_LATEST_RELEASE=$(git tag -l --sort -version:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sed -n '2p')
          GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH=`echo $GITHUB_PREVIOUS_LATEST_RELEASE | sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+)/\1.\2/'`
          echo "New tag with major.minor versions - $NEW_TAG_WITHOUT_PATCH, prev latest release - $GITHUB_LATEST_RELEASE, prev latest release with major.minor versions - GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH"
          echo "NEW_TAG_WITHOUT_PATCH=$NEW_TAG_WITHOUT_PATCH" >> $GITHUB_OUTPUT
          echo "GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH=$GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH" >> $GITHUB_OUTPUT


  job2:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run your second job
      run: |
        echo "This is the second job. Tag was pushed!"

  job3:
    needs: [job1]
    runs-on: ubuntu-latest
    if: ${{ needs.job1.outputs.GITHUB_PREVIOUS_LATEST_RELEASE_WITHOUT_PATCH < needs.job1.outputs.NEW_TAG_WITHOUT_PATCH }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run your last job
      run: |
        echo "This is the last job. Tag was pushed and it is a minor version tag!"